USAGE:
	PatternDetective.exe [-help                            
		   /?                                              
		   -f       [filename]                             
		   -min     [minimum pattern length]                
		   -max     [maximum pattern length]		  
		   -d                                              
		   -c                                              
		   -threads [number of threads]                    
		   -mem     [memory limit in MB]                   
		   -ram                                            
		   -hd                                             
		   -start   [level to begin searching] 
		   -o       [minimum times a pattern has to occur in order to keep track of it]
		   -v       [verbosity level]
Options:
	-help                   Displays this help page 
	/?                      Displays this help page    
	-f [string]             Sets file name to be processed  
	-min [unsigned long]    Sets the minimum pattern length to be searched
	-max [unsigned long]    Sets the maximum pattern length to be searched
	-d                      Outputs pattern count per level
	-c                      Finds the best threading scheme for computer 
	-threads [unsigned int] Sets thread count to be used                 
	-mem [unsigned long]    Sets the maximum RAM memory that can be used in MB
	-ram                    Forces program to use only RAM 
	-hd                     Forces program to use Hard Disk based on -mem
	-start [unsigned long]  Level to begin searching (not used currently)
	-o [unsigned long]      Mimimum occurrences to consider a pattern (Default occurences will be 2)
	-v [unsigned long] 		Verbosity level, turn logging on or off with 1 or 0
	
Examples:

1) ./PatternFinder –f Database –v 1 –threads 4 –ram
Pattern searches all files recursively in directory using DRAM with 4 threads

2) ./PatternFinder –f TaleOfTwoCities.txt –v 1 –c -ram
Finds the most optimal thread usage for processing a file

3) ./PatternFinder –f TaleOfTwoCities.txt –v 1
Processes file using memory prediction per level for HD or DRAM processing

4) ./PatternFinder –f TaleOfTwoCities.txt –v 1 –mem 1000
Processes file using memory prediction per level for HD or DRAM processing with a memory constraint of 1 GB
