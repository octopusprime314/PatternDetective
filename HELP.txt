USAGE:
	PatternDetective.exe [
		   -help                            
		   /?                                              
		   -f       [filename]                             
		   -min     [minimum pattern length]                
		   -max     [maximum pattern length]	               
		   -c                                              
		   -threads [number of threads]                    
		   -mem     [memory limit in MB]                   
		   -ram                                            
		   -hd                                    
		   -i       [minimum times a pattern has to occur in order to keep track of it]
		   -v       [verbosity level]
		   -n     
		   -o
		   -his     [hd files]
		   -lr      [low range pattern search]
		   -hr		[high range pattern search]
		   -pnoname 
		   -plevel  [level to show detailed output]
		   -ptop    [n most common patterns indicated by -plevel]
Options:
	-help                   Displays this help page 
	/?                      Displays this help page    
	-f [string]             Sets file name to be processed  
	-min [unsigned long]    Sets the minimum pattern lengtqh to be searched
	-max [unsigned long]    Sets the maximum pattern length to be searched
	-c                      Finds the best threading scheme for computer 
	-threads [unsigned int] Sets thread count to be used                 
	-mem [unsigned long]    Sets the maximum RAM memory that can be used in MB
	-ram                    Forces program to use only RAM 
	-hd                     Forces program to use Hard Disk based on -mem
	-i [unsigned long]      Mimimum occurrences to consider a pattern (Default occurences will be 2)
	-v [unsigned long] 		Verbosity level, turn logging and pattern generation on or off with 1 or 0
	-n   					Only look for patterns that do not overlap each other 
    -o						Only look for patterns that overlap each other
	-his					HD processing file history keeps all files or removes them level by level with a 1 or a 0
	-lr  				    Search for patterns that begin with the value lr to 255 if hr isn't set, otherwise lr to hr range
	-hr  				    Search for patterns that begin with the value hr to 0 if lr isn't set, otherwise lr to hr range 
	-pnoname 				Do not print pattern string data
	-plevel					Sets the level the user wants to see detailed output for
	-ptop					Display the top N most common patterns in detail for the level indicated by -plevel


ALL OUTPUT FILES GENERATED ARE LOCATED IN THE LOG FOLDER.  
Log* files contain debug information and Output* files contain structured pattern information using -plevel and -ptop to increase pattern verbosity.

LOCATION OF FILES TO BE PROCESSED:
Place your file to be processed in the Database/Data folder

Examples:

1) ./PatternFinder -f Database -threads 4 -ram
Pattern searches all files recursively in directory using DRAM with 4 threads

2) ./PatternFinder -f TaleOfTwoCities.txt -c -ram
Finds the most optimal thread usage for processing a file

3) ./PatternFinder -f TaleOfTwoCities.txt -plevel 3 -ptop 10
Processes file using memory prediction per level for HD or DRAM processing and displays detailed information for level 3 patterns for the top 10 patterns found

4) ./PatternFinder -f TaleOfTwoCities.txt -plevel 3 -ptop 10 -pnoname
Processes file using memory prediction per level for HD or DRAM processing and displays detailed information for level 3 patterns for the top 10 patterns found but doesn't print pattern string

5) ./PatternFinder -f TaleOfTwoCities.txt -v 1 -mem 1000
Processes file using memory prediction per level for HD or DRAM processing with a memory constraint of 1 GB and -v displays logging program information
